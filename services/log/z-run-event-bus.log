(base) 0:29:14 ➜  services git:(main) ✗ ./custom-event-bus-in-event-bridge.sh 
==== 1. Create role: demo-role-for-eb
{
    "Role": {
        "Path": "/",
        "RoleName": "demo-role-for-eb",
        "RoleId": "AROAZ656IMM6ZZ3QXHPBK",
        "Arn": "arn:aws:iam::xxxxxxxx:role/demo-role-for-eb",
        "CreateDate": "2025-06-29T16:29:23+00:00",
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                }
            ]
        }
    }
}
Attach role to policy: demo-role-for-eb to AWSLambdaBasicExecutionRole
Get role ARN: arn:aws:iam::xxxxxxxx:role/demo-role-for-eb
==== 2. Create lambda function: demoReceiveEBFunc
  adding: lambda_function.py (deflated 9%)
Upload lambda func to AWS
{
    "FunctionName": "demoReceiveEBFunc",
    "FunctionArn": "arn:aws:lambda:us-east-1:xxxxxxxx:function:demoReceiveEBFunc",
    "Runtime": "python3.12",
    "Role": "arn:aws:iam::xxxxxxxx:role/demo-role-for-eb",
    "Handler": "lambda_function.lambda_handler",
    "CodeSize": 255,
    "Description": "",
    "Timeout": 3,
    "MemorySize": 128,
    "LastModified": "2025-06-29T16:29:30.515+0000",
    "CodeSha256": "px+z0gktVWg+m2cb85qDDiBExMwC6DT2QfxDydANGq0=",
    "Version": "$LATEST",
    "TracingConfig": {
        "Mode": "PassThrough"
    },
    "RevisionId": "53032433-e3c0-4129-9212-102080d2968b",
    "State": "Pending",
    "StateReason": "The function is being created.",
    "StateReasonCode": "Creating",
    "PackageType": "Zip",
    "Architectures": [
        "x86_64"
    ],
    "EphemeralStorage": {
        "Size": 512
    },
    "SnapStart": {
        "ApplyOn": "None",
        "OptimizationStatus": "Off"
    },
    "RuntimeVersionConfig": {
        "RuntimeVersionArn": "arn:aws:lambda:us-east-1::runtime:328d20742c3122ae6ce3d7de682cc7c281f90f98486a5e552e4849d3a1838c05"
    },
    "LoggingConfig": {
        "LogFormat": "Text",
        "LogGroup": "/aws/lambda/demoReceiveEBFunc"
    }
}
Get lambda func ARN: arn:aws:lambda:us-east-1:xxxxxxxx:function:demoReceiveEBFunc
==== 3. Create custom event bus: demo-event-bus
{
    "EventBusArn": "arn:aws:events:us-east-1:xxxxxxxx:event-bus/demo-event-bus"
}
put rule for custom event bus: rule {customEBRule}
{
    "RuleArn": "arn:aws:events:us-east-1:xxxxxxxx:rule/demo-event-bus/demo-event-rule"
}
Get rule ARN: arn:aws:events:us-east-1:xxxxxxxx:rule/demo-event-bus/demo-event-rule
put lambda function target for custom event bus: target arn:aws:lambda:us-east-1:xxxxxxxx:function:demoReceiveEBFunc
{
    "FailedEntryCount": 0,
    "FailedEntries": []
}
Add permission for lambda function
{
    "Statement": "{\"Sid\":\"EventBridgeInvokeLambda\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"events.amazonaws.com\"},\"Action\":\"lambda:InvokeFunction\",\"Resource\":\"arn:aws:lambda:us-east-1:xxxxxxxx:function:demoReceiveEBFunc\",\"Condition\":{\"ArnLike\":{\"AWS:SourceArn\":\"arn:aws:events:us-east-1:xxxxxxxx:rule/demo-event-bus/demo-event-rule\"}}}"
}
==== 4. send a test event
{
    "FailedEntryCount": 0,
    "Entries": [
        {
            "EventId": "b5eb3e39-d3da-89dc-fde9-11367c90c141"
        }
    ]
}
==== 5. check cloudwatch log
logStream name: 2025/06/29/[$LATEST]48637956100f4f5ead376d9957cddff0
{
    "events": [
        {
            "timestamp": 1751214589498,
            "message": "INIT_START Runtime Version: python:3.12.v73\tRuntime Version ARN: arn:aws:lambda:us-east-1::runtime:328d20742c3122ae6ce3d7de682cc7c281f90f98486a5e552e4849d3a1838c05\n",
            "ingestionTime": 1751214590799
        },
        {
            "timestamp": 1751214589589,
            "message": "START RequestId: c10da10b-9474-4cfc-b184-1f8f7a75e642 Version: $LATEST\n",
            "ingestionTime": 1751214590799
        },
        {
            "timestamp": 1751214589590,
            "message": "I got this event: {'version': '0', 'id': 'b5eb3e39-d3da-89dc-fde9-11367c90c141', 'detail-type': 'TestEvent', 'source': 'my.custom.source', 'account': 'xxxxxxxx', 'time': '2025-06-29T16:29:49Z', 'region': 'us-east-1', 'resources': [], 'detail': {'message': 'Hello EventBridge!'}}\n",
            "ingestionTime": 1751214590799
        },
        {
            "timestamp": 1751214589592,
            "message": "END RequestId: c10da10b-9474-4cfc-b184-1f8f7a75e642\n",
            "ingestionTime": 1751214590799
        },
        {
            "timestamp": 1751214589592,
            "message": "REPORT RequestId: c10da10b-9474-4cfc-b184-1f8f7a75e642\tDuration: 1.91 ms\tBilled Duration: 2 ms\tMemory Size: 128 MB\tMax Memory Used: 36 MB\tInit Duration: 87.89 ms\t\n",
            "ingestionTime": 1751214590799
        }
    ],
    "nextForwardToken": "f/39053390350440569768365579137948170918239392865423392772/s",
    "nextBackwardToken": "b/39053390348344299719703700562643813400610446883861233664/s"
}
(base) 0:30:52 ➜  services git:(main) ✗ 